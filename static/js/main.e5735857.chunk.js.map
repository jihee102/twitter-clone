{"version":3,"sources":["firebase.js","components/AuthForm.js","routes/Auth.js","components/Twite.js","components/TwiteFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","error","setError","email","setEmail","password","setPassword","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Twite","twiteObj","isOwner","editing","setEditing","text","newTwite","setNewTwite","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","TwiteFactory","userObj","twite","setTwite","attachment","setAttachment","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdDate","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","twites","setTwites","useEffect","onSnapshot","snapshot","twiteArray","docs","map","marginTop","key","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyTwites","where","orderBy","get","e","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","isLoggedIn","maxWidth","width","margin","exact","path","Home","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Router","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5735857.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n \r\n export const firebaseInstance = firebase;\r\n export const authService= firebase.auth();\r\n export const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n  ","import React, { useState } from \"react\";\r\nimport { authService } from \"../firebase\";\r\n\r\nfunction AuthForm() {\r\n  const [error, setError] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from \"../components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"../firebase\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button name=\"google\" onClick={onSocialClick} className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button name=\"github\" onClick={onSocialClick} className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"../firebase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Twite({ twiteObj, isOwner }) {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTwite, setNewTwite] = useState(twiteObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this twite?\");\r\n    if (ok) {\r\n      await dbService.doc(`twites/${twiteObj.id}`).delete();\r\n      await storageService.refFromURL(twiteObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`twites/${twiteObj.id}`).update({ text: newTwite });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewTwite(value);\r\n  };\r\n  return (\r\n    <div className=\"twite\">\r\n      {editing ? (\r\n        <>\r\n          {\" \"}\r\n          <form onSubmit={onSubmit} className=\"container twiteEdit\">\r\n            <input\r\n              onChange={onChange}\r\n              value={newTwite}\r\n              required\r\n              type=\"text\"\r\n              className=\"formInput\"\r\n              autoFocus\r\n              placeholder=\"Edit yout twite\"\r\n            />\r\n            <input type=\"submit\" value=\"Update twite\" className=\"formBtn\" />\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancel</button>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{twiteObj.text}</h4>\r\n          {twiteObj.attachmentUrl && <img src={twiteObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div class=\"twite__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Twite;\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"../firebase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction TwiteFactory({ userObj }) {\r\n  const [twite, setTwite] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    if (twite === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await fileRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const twiteObj = {\r\n      text: twite,\r\n      createdDate: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"twites\").add(twiteObj);\r\n    setTwite(\"\");\r\n    setAttachment();\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setTwite(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={twite}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TwiteFactory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Twite from \"../components/Twite\";\r\nimport { dbService, storageService } from \"../firebase\";\r\n\r\nimport TwiteFactory from \"../components/TwiteFactory\";\r\n\r\nexport default ({ userObj }) => {\r\n  const [twites, setTwites] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"twites\").onSnapshot((snapshot) => {\r\n      const twiteArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setTwites(twiteArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TwiteFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {twites.map((twite) => (\r\n          <Twite\r\n            key={twite.id}\r\n            twiteObj={twite}\r\n            isOwner={twite.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { authService, dbService } from \"../firebase\";\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const getMyTwites = async () => {\r\n    const twites = await dbService\r\n      .collection(\"twites\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdDate\")\r\n      .get();\r\n\r\n    console.log(twites.docs.map((doc) => doc.data()));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyTwites();\r\n  }, []);\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Navigation({ userObj }) {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          {\" \"}\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          {\" \"}\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nexport default ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport Router from \"./Router\";\nimport { authService } from \"../firebase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {\" \"}\n      {init ? (\n        <Router\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}{\" \"}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}